// Place your key bindings in this file to override the defaults
[
    {
        "key": "ctrl+s",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.s && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+s",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert.s && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+s",
        "command": "workbench.action.files.save"
    },
    {
        "key": "cmd+s",
        "command": "-workbench.action.files.save"
    },
    {
        "key": "ctrl+u",
        "command": "cursorMove",
        "args": {
            "to": "up",
            "by": "line",
            "value": 9
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+d",
        "command": "cursorMove",
        "args": {
            "to": "down",
            "by": "line",
            "value": 9
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+f",
        "command": "-vscode-neovim.ctrl-f",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.f && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+f",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert.f && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.pageDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "ctrl+f",
        "command": "-cursorRight",
        "when": "textInputFocus"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inlineEditIsVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionVisible && tabShouldAcceptInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible || inlineEditIsVisible && inlineSuggestionHasIndentationLessThanTabSize && inlineSuggestionVisible && !editor.hasSelection && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inInlineEditsPreviewEditor"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.commit",
        "when": "inInlineEditsPreviewEditor"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.inlineSuggest.jump",
        "when": "inlineEditIsVisible && tabShouldJumpToInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "tab",
        "command": "-editor.action.inlineSuggest.jump",
        "when": "inlineEditIsVisible && tabShouldJumpToInlineEdit && !editorHoverFocused && !editorTabMovesFocus && !suggestWidgetVisible"
    },
    {
        "key": "ctrl+d",
        "command": "editor.action.inlineSuggest.acceptNextWord",
        "when": "cursorBeforeGhostText && inlineSuggestionVisible && !accessibilityModeEnabled && !editorReadonly"
    },
    {
        "key": "cmd+right",
        "command": "-editor.action.inlineSuggest.acceptNextWord",
        "when": "cursorBeforeGhostText && inlineSuggestionVisible && !accessibilityModeEnabled && !editorReadonly"
    },
    {
        "key": "ctrl+shift+p",
        "command": "workbench.action.showCommands"
    },
    {
        "key": "shift+cmd+p",
        "command": "-workbench.action.showCommands"
    },
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "cmd+down",
        "command": "-selectNextSuggestion",
        "when": "suggestWidgetMultipleSuggestions && suggestWidgetVisible && textInputFocus || suggestWidgetVisible && textInputFocus && !suggestWidgetHasFocusedSuggestion"
    },
    {
        "key": "alt+cmd+b",
        "command": "-workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "cmd+l",
        "command": "workbench.action.focusAuxiliaryBar"
    },
    {
        "key": "cmd+h",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "auxiliaryBarFocus && !editorTextFocus"
    },
    {
        "key": "ctrl+h",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "auxiliaryBarFocus && !editorTextFocus"
    },
    {
        "key": "escape",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "auxiliaryBarFocus && !editorTextFocus"
    },
    {
        "key": "alt+l",
        "command": "workbench.action.toggleAuxiliaryBar"
    },
    {
        "key": "ctrl+d",
        "command": "runCommands",
        "args": {
            "commands": [
                "list.focusDown",
                "list.focusDown",
                "list.focusDown",
                "list.focusDown",
                "list.focusDown"
            ]
        },
        "when": "explorerViewletFocus && !inputFocus"
    },
    {
        "key": "ctrl+u",
        "command": "runCommands",
        "args": {
            "commands": [
                "list.focusUp",
                "list.focusUp",
                "list.focusUp",
                "list.focusUp",
                "list.focusUp"
            ]
        },
        "when": "explorerViewletFocus && !inputFocus"
    },
    {
        "key": "escape",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "explorerViewletFocus && !inputFocus"
    },
    {
        "key": "ctrl+l",
        "command": "workbench.action.focusActiveEditorGroup",
        "when": "explorerViewletFocus && !inputFocus"
    }
]

// Place your key bindings in this file to override the defaults
// 文件路径：$HOME/.config/Code/User/keybindings.json
[
    // 基础编辑器操作
    {
        "key": "ctrl+w q",
        "command": "workbench.action.closeActiveEditor",
        "when": "!editorTextFocus && !filesExplorerFocus && !searchViewletFocus && !terminalFocus && neovim.mode != 'cmdline'"
    },
    {
        "key": "ctrl+`",
        "command": "workbench.action.terminal.toggleTerminal",
        "when": "terminal.active"
    },
    // 终端导航
    {
        "key": "ctrl+up",
        "command": "workbench.action.terminal.focusNext",
        "when": "terminalFocus && terminalHasBeenCreated && !terminalEditorFocus || terminalFocus && terminalProcessSupported && !terminalEditorFocus"
    },
    {
        "key": "ctrl+down",
        "command": "workbench.action.terminal.focusPrevious",
        "when": "terminalFocus"
    },
    // 快速导航
    {
        "key": "ctrl+alt+\\",
        "command": "workbench.action.focusFirstEditorGroup"
    },
    {
        "key": "ctrl+alt+]",
        "command": "workbench.action.focusSecondEditorGroup"
    },
    // 增强光标移动 (Neovim风格)
    {
        "key": "ctrl+u",
        "command": "cursorMove",
        "args": {
            "to": "up",
            "by": "line",
            "value": 9
        },
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+d",
        "command": "cursorMove",
        "args": {
            "to": "down",
            "by": "line",
            "value": 9
        },
        "when": "editorTextFocus"
    },
    // ========== 核心Tab键配置 ==========

    // Tab选择下一个建议项（移除接受建议绑定）
    {
        "key": "tab",
        "command": "selectNextSuggestion",
        "when": "suggestWidgetVisible && editorTextFocus"
    },
    // 保留默认缩进功能
    {
        "key": "tab",
        "command": "tab",
        "when": "editorTextFocus && !suggestWidgetVisible"
    },
    // Enter确认补全
    {
        "key": "enter",
        "command": "acceptSelectedSuggestion",
        "when": "suggestWidgetVisible"
    },
    // 4. 禁用Neovim的Tab处理（插入模式）
    {
        "key": "tab",
        "command": "-vscode-neovim.send",
        "when": "neovim.init && (neovim.recording || neovim.mode != 'insert') && editorTextFocus && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "tab",
        "command": "-vscode-neovim.send-cmdline",
        "when": "neovim.init && neovim.mode == 'cmdline'"
    },
    // 补全导航
    {
        "key": "shift+tab",
        "command": "selectPrevSuggestion",
        "when": "suggestWidgetVisible && editorTextFocus"
    },
    // ========== AI辅助配置 ==========
    {
        "key": "ctrl+f",
        "command": "editor.action.inlineSuggest.commit",
        "when": "inlineSuggestionVisible"
    },
    {
        "key": "meta+l",
        "command": "aichat.newchataction"
    },
    {
        "key": "meta+k",
        "command": "aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible"
    },
    // ========== 其他优化 ==========
    // 终端新建
    {
        "key": "ctrl+alt+t",
        "command": "workbench.action.terminal.new",
        "when": "terminalProcessSupported || terminalWebExtensionContributedProfile"
    },
    // 快速文件操作
    {
        "key": "meta+f",
        "command": "workbench.action.files.openFolder",
        "when": "openFolderWorkspaceSupport"
    },
    {
        "key": "meta+l",
        "command": "workbench.action.chat.newChat",
        "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
    },
    {
        "key": "ctrl+l",
        "command": "-workbench.action.chat.newChat",
        "when": "chatIsEnabled && inChat && chatLocation != 'editing-session'"
    },
    {
        "key": "meta+l",
        "command": "workbench.action.chat.newEditSession",
        "when": "chatEditingParticipantRegistered && chatIsEnabled && inChat && chatLocation == 'editing-session'"
    },
    {
        "key": "ctrl+l",
        "command": "-workbench.action.chat.newEditSession",
        "when": "chatEditingParticipantRegistered && chatIsEnabled && inChat && chatLocation == 'editing-session'"
    },
    {
        "key": "ctrl+l",
        "command": "-aichat.newchataction"
    },
    {
        "key": "ctrl+shift+l",
        "command": "workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+m e",
        "command": "-workbench.files.action.focusOpenEditorsView",
        "when": "workbench.explorer.openEditorsView.active"
    },
    {
        "key": "ctrl+meta+f",
        "command": "workbench.action.addRootFolder",
        "when": "enterMultiRootWorkspaceSupport || workbenchState == 'workspace'"
    },
    {
        "key": "ctrl+f",
        "command": "-editor.action.pageDownHover",
        "when": "editorHoverFocused"
    },
    {
        "key": "ctrl+f",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.ctrlKeysInsert.f && neovim.init && neovim.mode == 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+f",
        "command": "-vscode-neovim.ctrl-f",
        "when": "editorTextFocus && neovim.ctrlKeysNormal.f && neovim.init && neovim.mode != 'insert' && editorLangId not in 'neovim.editorLangIdExclusions'"
    },
    {
        "key": "ctrl+alt+f",
        "command": "actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+f",
        "command": "-actions.find",
        "when": "editorFocus || editorIsOpen"
    },
    {
        "key": "ctrl+f",
        "command": "-notebook.find",
        "when": "notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.interactive' || notebookEditorFocused && !editorFocus && activeEditor == 'workbench.editor.notebook'"
    },
    {
        "key": "ctrl+f",
        "command": "-settings.action.search",
        "when": "inSettingsEditor"
    },
    {
        "key": "ctrl+f",
        "command": "-workbench.action.terminal.focusFind",
        "when": "terminalFindFocused && terminalHasBeenCreated || terminalFindFocused && terminalProcessSupported || terminalFocusInAny && terminalHasBeenCreated || terminalFocusInAny && terminalProcessSupported"
    },
    {
        "key": "ctrl+f",
        "command": "editor.action.acceptCursorTabSuggestion",
        "when": "cpp.shouldAcceptTab"
    },
    {
        "key": "tab",
        "command": "-editor.action.acceptCursorTabSuggestion",
        "when": "cpp.shouldAcceptTab"
    },
    {
        "key": "ctrl+i",
        "command": "-workbench.action.chat.startVoiceChat",
        "when": "chatIsEnabled && hasSpeechProvider && inChatInput && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress || chatIsEnabled && hasSpeechProvider && inlineChatFocused && !chatSessionRequestInProgress && !editorFocus && !notebookEditorFocused && !scopedVoiceChatGettingReady && !speechToTextInProgress"
    },
    {
        "key": "ctrl+i",
        "command": "-composer.startComposerPrompt"
    },
    {
        "key": "meta+q",
        "command": "composer.closeComposerTab",
        "when": "composerFocused || focusedView =~ /^workbench.panel.aichat.view/"
    },
    {
        "key": "ctrl+w",
        "command": "-composer.closeComposerTab",
        "when": "composerFocused || focusedView =~ /^workbench.panel.aichat.view/"
    },
    {
        "key": "q",
        "command": "-vscode-neovim.send",
        "when": "editorTextFocus && neovim.init && focusedView == 'workbench.panel.output' && neovim.mode != 'insert'"
    },
    {
        "key": "meta+q",
        "command": "aichat.close-sidebar",
        "when": "editorTextFocus"
    },
    {
        "key": "ctrl+k",
        "command": "-aipopup.action.modal.generate",
        "when": "editorFocus && !composerBarIsVisible"
    },
]
